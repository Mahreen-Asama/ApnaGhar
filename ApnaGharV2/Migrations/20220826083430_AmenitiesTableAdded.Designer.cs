// <auto-generated />
using System;
using ApnaGharV2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApnaGharV2.Migrations
{
    [DbContext(typeof(ApnaGharV2_DBContext))]
    [Migration("20220826083430_AmenitiesTableAdded")]
    partial class AmenitiesTableAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApnaGharV2.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<int>("Bedrooms")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagesPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("PriceUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("SizeUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PropertyId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("ApnaGharV2.Models.PropertyAmenities", b =>
                {
                    b.Property<int>("AmenitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenitiesId"), 1L, 1);

                    b.Property<bool?>("AirConditioning")
                        .HasColumnType("bit");

                    b.Property<int?>("Bathrooms")
                        .HasColumnType("int");

                    b.Property<int?>("Bedrooms")
                        .HasColumnType("int");

                    b.Property<int?>("BuiltYear")
                        .HasColumnType("int");

                    b.Property<bool?>("DiningRoom")
                        .HasColumnType("bit");

                    b.Property<bool?>("DrawingRoom")
                        .HasColumnType("bit");

                    b.Property<string>("ElectricityBackup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FacilitiesForDisabled")
                        .HasColumnType("bit");

                    b.Property<string>("Flooring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Floors")
                        .HasColumnType("int");

                    b.Property<bool?>("Furnished")
                        .HasColumnType("bit");

                    b.Property<bool?>("InternetAccess")
                        .HasColumnType("bit");

                    b.Property<int?>("Kitchens")
                        .HasColumnType("int");

                    b.Property<bool?>("LaundryRoom")
                        .HasColumnType("bit");

                    b.Property<bool?>("LawnOrGarden")
                        .HasColumnType("bit");

                    b.Property<bool?>("LoungeOrSittingRoom")
                        .HasColumnType("bit");

                    b.Property<bool?>("MaintenanceStaff")
                        .HasColumnType("bit");

                    b.Property<int?>("NearbyHospitals")
                        .HasColumnType("int");

                    b.Property<int?>("NearbyMosques")
                        .HasColumnType("int");

                    b.Property<int?>("NearbyPublicTransport")
                        .HasColumnType("int");

                    b.Property<int?>("NearbyRestaurants")
                        .HasColumnType("int");

                    b.Property<int?>("NearbySchools")
                        .HasColumnType("int");

                    b.Property<int?>("NearbyShoppingMalls")
                        .HasColumnType("int");

                    b.Property<bool?>("OtherBCFacilities")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherFacilities")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherHRFacilities")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherMainFeatures")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherNBFacilities")
                        .HasColumnType("bit");

                    b.Property<bool?>("OtherRooms")
                        .HasColumnType("bit");

                    b.Property<int?>("ParkingSpaces")
                        .HasColumnType("int");

                    b.Property<bool?>("PrayerRoom")
                        .HasColumnType("bit");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<bool?>("SatellitetOrCable")
                        .HasColumnType("bit");

                    b.Property<bool?>("SecurityStaff")
                        .HasColumnType("bit");

                    b.Property<int?>("ServantQuarters")
                        .HasColumnType("int");

                    b.Property<int?>("StoreRooms")
                        .HasColumnType("int");

                    b.Property<bool?>("StudyRoom")
                        .HasColumnType("bit");

                    b.Property<bool?>("SwimmingPool")
                        .HasColumnType("bit");

                    b.Property<string>("View")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AmenitiesId");

                    b.ToTable("Amenities");
                });

            modelBuilder.Entity("ApnaGharV2.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
